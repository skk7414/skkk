function checkContinuousChatting(bot, message) {
    let sponsor = '772772430300053535'; // 후원자
    let best_Talker = '738665728411959367'; // 채팅창지박령
    // let sponsor = '706088309738307585'; // 봇
    // let best_Talker = '738371570472583261'; // 관리자
    let apology_channel = '<#791920371691421696> 가서 사죄하세요.'; // 사죄하는 곳
    
    let member = message.guild.members.cache.find(x => x.user.id == message.author.id );
    let isSponsor = member._roles.find(x => x == sponsor);
    let isBest_Talker = member._roles.find(x => x == best_Talker);

    // 후원자 이면서 채팅창지박령이면 뮤트 먹지 않음.
    if(isSponsor && isBest_Talker) return;

    // 관리자는 도배 걸리지 않음.
    if(message.member.hasPermission('ADMINISTRATOR')) return;

    // 시간, 뮤트 롤
    let messageTime = moment().tz('Asia/Seoul').locale('ko').valueOf()
    let time = bot.authors.get(message.author.id);
    let forbiddenWordTime = bot.authors.get(message.author.id) || messageTime;
    let muterole = message.channel.guild.roles.cache.find(r => r.name == "Muted")

    // 욕설 체크
    let msg = message.content;
    for(fw of forbiddenWord) {
        if(msg.indexOf(bot.prefix+fw) != -1) { // ㅗ 같이. 명령어와 섞일 수 있기 때문에 추가한 부분
            continue;
        } else if(msg.indexOf(fw) != -1) {
            message.guild.members.cache.find(x => x.id == message.author.id).roles.add(muterole.id)
            if(messageTime == forbiddenWordTime) {
                message.reply(`첫 채팅이 욕이냐. 이 개새끼야. Mute 먹어라.\n\`\`사용한 욕: ${fw}\`\`   \`\`전 채팅과의 간격 ${messageTime - forbiddenWordTime}ms\`\`\n\n${apology_channel}`);
            } else {
                message.reply(`욕 하지마라 이 개새끼야. 씨발. 님 Mute 드셈.\n\`\`사용한 욕: ${fw}\`\`   \`\`전 채팅과의 간격 ${messageTime - forbiddenWordTime}ms\`\`\n\n${apology_channel}`);
            }
            bot.authors.set(message.author.id, messageTime);
            return true;
        }
    }

    // 도배성 채팅 체크
    if(message.content == '.' || message.content == '?') {
        message.guild.members.cache.find(x => x.id == message.author.id).roles.add(muterole.id)
        message.reply(`\`\`.\`\` \`\`?\`\` 하나만 치지마세요. Mute 드셈.\n${apology_channel}`);
        bot.authors.set(message.author.id, messageTime);
        return true;
    } else if(!time) {
        bot.authors.set(message.author.id, messageTime);
        return false;
    } else if(messageTime - time <= 3000) {
        message.guild.members.cache.find(x => x.id == message.author.id).roles.add(muterole.id)
        message.reply(`단타 도배하지마세요. 씨발 님 Mute 드셈.\n${apology_channel} \`\`전 채팅과의 간격 ${messageTime - time}ms\`\``);
        bot.authors.set(message.author.id, messageTime);
        return true;
    }

    bot.authors.set(message.author.id, messageTime);
    return false;
}

client.on('message', (message) => {
    if(checkContinuousChatting(bot, message)) return;
});